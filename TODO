TODO

Currently only single poles are considered. 

Decide next run: Beyn or Newton? Run Newton for w_BeynConverged[l] and obtain w_NewtonConverged[l]. 
Abort Newton if convergence is slow. 


--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
NOTES

The User supplies the following. 
     a matrix-valued function A[w]
     int k_guess : initial guess for the number of eigenvalues
     const cdouble phi(t): contour parametrization

Function Beyn has 4 inputs:  int k_guess, matrix A[w], const cdouble phi(t), 
                             int N, cdouble w_NewtonConverged[l], double delta_w_BeynCutoff
                  4 outputs: int k, cdouble w[k], double delta_w[k], int N, w_BeynConverged[l]

Function Newton has 3 inputs: int l, cdouble w_BeynConverged[l], matrix A[w], 
                    outputs: cdouble w_NewtonConverged[l] 
                             w0[k0] denote the k0 eigenvalues that have converged to e_mach
--------------------------------------------------------------------------------------------
2015.06.12
1. Beyn -> Newton was clear, but Newton -> Beyn was not. Today it became clear. 
   Newton->Beyn works to reduce the number of poles for the integrals.
2. What x axis is meaningful when you plot the error? What shows the system stability? 
   ex. distance bewteen contour and a particular eigenvalue of choice. change this distance and plot the error. 
--------------------------------------------------------------------------------------------
